function readURL(input) {
    if (input.files && input.files[0]) { 
        // var reader = new FileReader();
        // reader.onload = function (e) {
        //     $('.image-upload-wrap').hide();
        //     $('.file-upload-image').attr('src', e.target.result);
        //     $('.file-upload-content').show();
        //     $('.image-title').html(input.files[0].name);
        // };
        // reader.readAsDataURL(input.files[0]);

        // var input = document.getElementById('file');
        $('.image-upload-wrap').hide();
        $('.file-upload-content').show();

        var output = document.getElementById('fileList');
        output.innerHTML = '';
        var inc =1;
        $('#fileUploadCounty').val(inc);
        if(input.files.length > 0){
            document.getElementById("btn-attachment").removeAttribute('disabled');
        }
        for (var i = 0; i < input.files.length; ++i) {
            
            var fileType = input.files.item(i).type;
            fileType = fileType.split('/');
            var exten =  input.files.item(i).name.split('.').pop();
            var fileN = input.files.item(i).name.split('.').slice(0, -1).join('.');
            if (checkValidFiles(fileType[0])) {
                $('#fileUploadCountyMax').val(inc);
                inc = inc+1;
                
                output.innerHTML += '<li class="list-group-item"> <div class="filName-container">' + fileN + '</div><div class="filext-container">.'+exten+'<span class="text-gray pl-1">(' +bytesToSize(input.files.item(i).size) + ')</div></span></li>';
            } else {
                output.innerHTML += '<li class="list-group-item text-danger"> <div class="filName-container">' + fileN + '</div><div class="filext-container">.'+exten+'<span class="text-gray pl-1">(' +bytesToSize(input.files.item(i).size) + ')</div></span></li>';
            }

        }
    } else {
        removeUpload();
    }
}
function bytesToSize(bytes) {
    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
    if (bytes == 0) return 'n/a';
    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
    return (bytes / Math.pow(1024, i)).toFixed(1) + '' + sizes[i];
};
function checkValidFiles(fileType) {
    arr_files = ['image', 'audio', 'video', 'application', 'text'];
    if (arr_files.includes(fileType)) {
        return true;
    } else {
        return false;
    }
}

function removeUpload() {
    document.getElementById("btn-attachment").setAttribute('disabled',true);
    $('#fileUploadCountyNot').val('0');
    $('#progressDescriptionFiles').html('Progress (click "Attach" to start)');
    $('#progressBarFiles').css("width", '1%');
    $('#progressBarFiles').html('');
    $('#fileUploadCounty').val('');
    $('#fileUploadCountyMax').val('');
    $('.file-upload-input').val('');
    $('.file-upload-input').replaceWith($('.file-upload-input').clone());
    $('.file-upload-content').hide();
    $('.image-upload-wrap').show();
}
$('.image-upload-wrap').bind('dragover', function () {
    $('.image-upload-wrap').addClass('image-dropping');
});
$('.image-upload-wrap').bind('dragleave', function () {
    $('.image-upload-wrap').removeClass('image-dropping');
});

var storeVlaue = 0;

function fileUpload() {
    var client_id = $('#dbid').val();
    var form = $('#fileUploadForm')[0];
    var formData = new FormData(form);
    formData.append('client_id', client_id);
    // formData.append('staff_id', staff_id);
    $('.progress-description').hide();
    $('#progressDescriptionFiles').html('');
    files = document.getElementById("documentUpload").files;
    fileMax = $('#fileUploadCountyMax').val();
    $('#progressBarFiles').html('1 of '+fileMax );
  
    // Promise start
    var aa =0;
    // for (var i = 0; i < files.length; i++) {
        
            // $('#progressBarFiles').css("width", '1%');
            // setTimeout(() => {
                
                var i =0;
                var interval = setInterval(function() {
                 
                    if (i <  files.length) {
                        var fileType = files[i].type;
                        fileType = fileType.split('/');
                        if (checkValidFiles(fileType[0])) {
                            fileUploadOnDropbox(files[i],storeVlaue);  
                        }
                    } else {
                        clearInterval(interval);
                        storeVlaue = 0;
                        $('#progressBarFiles').html('Complete...');
                        setTimeout(() => {
                            $('#myModal_attach').modal('hide');
                            // notifyr((fileUploadCounty-1)+ ' Files uploaded successfully.  '+(notUpload)+ ' not uploaded','success');
                            tableDoc = $('#v-4').DataTable();
                            tableDoc.destroy();
                            fetchDocumentsRecords();    
                            journal_width();        
                            reakTracker('Documents Updated');
                        }, 1000);
                    }
                    i++;
                    
                }, 3000)
            // }, 500);
        }
    
var tableMenuBoxToggle3 = false;
var firstRunMenuBox3 = false;
var input3;
function tableMenuBox3()
{

    var menu = document.getElementById("table_menu3");
   
    var dragable_item_container = menu.children[0];
    var dragable_item_array = dragable_item_container.children;
   
    var localst = localStorage.getItem("AttachmentsColumns");
   
    input3 = (localst !== null)? JSON.parse(localst) : ["Date Added","Attachment Name"," "];
    

        if(input3.length > 0)
        {
            // var firstRunComplited = false;
            for(var i = 0; i <= dragable_item_array.length-1; i++)
            {   
                if(dragable_item_array[i].getAttribute("counter") == 0)
                {
                    var dateAdd = dragable_item_array[i];
                }   
                if(dragable_item_array[i].getAttribute("counter") == 1)
                {
                    var attachmentname = dragable_item_array[i];
                }
                if(dragable_item_array[i].getAttribute("counter") == 2)
                {
                    var action  = dragable_item_array[i];
                }
            }
            for(var j = 0; j <= input3.length-1; j++)
            {
            
                    if(input3[j] == "Date Added")
                    {   
                        dateAdd.children[0].checked = true;
                        // dragable_item_container.appendChild(dateAdd);
                    }
                    if(input3[j] == "Attachment Name")
                    {   
                        attachmentname.children[0].checked = true;
                        // dragable_item_container.appendChild(attachmentname);
                    }
                    if(input3[j] == " ")
                    {   
                        action.children[0].checked = true;
                        // dragable_item_container.appendChild(action);
                    }
            }
        }else{
            localStorage.removeItem("AttachmentsColumns");
        }

        if(firstRunMenuBox3 == false)
        {
            firstRunMenuBox3 = true;
        }else
        {
            if(tableMenuBoxToggle3 == false)
            {
                menu.setAttribute("style","display:block;width:200px;");
                tableMenuBoxToggle3 = true;
            }
            else
            {
                menu.setAttribute("style","display:none;");
                tableMenuBoxToggle3 = false;
            }   
        }
      
}
tableMenuBox3();


$( function() {
$( "#table_menu_dragable_item3" ).sortable();
$( "#table_menu_dragable_item3" ).disableSelection();
} );

function hideTableColumn3(element_id)
{
        
        var menu = document.getElementById("table_menu3");
        menu.setAttribute("style","display:none;");
        tableMenuBoxToggle= false;
        
        table = $('#v-4').DataTable();
        
        var save_btn = $("#table_menu_save3");
        var save_parent = save_btn.parent();
        var column_holder = save_parent.prev();
        var dragable_item_holder = column_holder[0];
        var dragable_item_array = dragable_item_holder.children;
        var dragable_array_length = dragable_item_array.length; 
        var selected_item_array = [];
        var selected_item_counter = 0;
        var all_item_array = [];
        var all_item_counter = 0;
        var unselected_item_array = [];
        var unselected_item_counter = 0;

        for(var i = 0; i <= dragable_array_length-1; i++)
        {

            if(dragable_item_array[i].children[0].checked == true)
            {
               // ["Date Added","Attachment Name","Action"]
                if(dragable_item_array[i].getAttribute("counter") == 0)
                {
                    selected_item_array[selected_item_counter] = "Date Added";
                    selected_item_counter = selected_item_counter + 1;
                }
                if(dragable_item_array[i].getAttribute("counter") == 1)
                {
                    selected_item_array[selected_item_counter] = "Attachment Name";
                    selected_item_counter = selected_item_counter + 1;
                }
                if(dragable_item_array[i].getAttribute("counter") == 2)
                {
                    selected_item_array[selected_item_counter] = " ";
                    selected_item_counter = selected_item_counter + 1;
                }

            }
            
            all_item_array[i] = dragable_item_array[i].getAttribute("counter"); 
        }
       
        // // input = ["Entry Date", "Entry Time", "Heading", "Staff Name"];
        if(selected_item_array.length > 1){
            localStorage.setItem("AttachmentsColumns", JSON.stringify(selected_item_array));
            fetchDocumentsRecords();
        }else{
            var menu = document.getElementById("table_menu3");
					menu.setAttribute("style","display:block;width:200px;");
            // notifyr('Please select at least one column to show','danger')
            document.getElementById("notifyr_msg").style.display = "block";
			setTimeout(function(){
				document.getElementById("notifyr_msg").style.display = "none";
			},3000);
			notifyrMsg();
        }

        // alert(input2);
    }



function fetchDocumentsRecords(input3 = null) {
        $('#table_loader').show();
        if (input3 == null) {
            
            if (localStorage.getItem("AttachmentsColumns") == null) 
            {
        
                input3 = ["Date Added","Attachment Name"," "];
            } 
            else 
            {
                input3 = JSON.parse(localStorage.getItem("AttachmentsColumns"));
            }
        } else {
        localStorage.setItem("AttachmentsColumns", JSON.stringify(input3));
        }
    $.ajax({
        type: "GET",
        url: "documents/getDocumentsRecords?id=" + $('#dbid').val(),
        success: function (response) {
            let responseVal = JSON.parse(response);
            let head = '';
            let counter = 0;
            let attributeCounter = 0;

            head += "<tr class='table_heading_section reak-last-th fix_table_header_attachment tab-content4' id = 'v4table_heading_section'>";
            input3.forEach(function(element) {
                if( attributeCounter == 2 )
                {
                    head += "<th current_th_count='"+attributeCounter+"' data-column-index='"+attributeCounter+"' aria-controls='v-4' style='width:64px !important;'>" + element + "</th>";
                }
                else
                {
                    head += "<th current_th_count='"+attributeCounter+"' data-column-index='"+attributeCounter+"' aria-controls='v-4' onmousemove = 'customWordWrap();' class = 'targetHeaderCell attachment_file_name_header'><span id = 'clickSpanAttachment_"+attributeCounter+"'>" + element + "</span><strong class='icon' style='margin-left:5px;margin-bottom: -1px;'></strong></th>";
                }
            attributeCounter = attributeCounter + 1;
            });
            head += "</tr>";

            if (responseVal.status == 'success') {
                let output = '';
                responseVal.data.forEach(element => {
                    output += '<tr class="Documents_'+element.documentId+' attachment_table_row" id="data_row_'+ counter +'">';
                    input3.forEach(function(single){
                        if(single == "Date Added")
                        {
                            output += '<td section="Date Added" style="" onclick ="redirectWithNewWindow(\'' +element.dropboxName + '\')">' + element.dateAdded + '</td>';
                        }
                        if(single == "Attachment Name")
                        {
                    
                            file_name = element.originalName;
                            split_array = file_name.split(".");
                            base_name = split_array[0];
                      
                            extenssion = split_array[1];
                            if(base_name.length > 80)
                            {
                                var file_name = base_name+"...";
                                var class_name = "attachment_file_name1";
                            }
                            else
                            {
                                var file_name = base_name;
                                var class_name = "attachment_file_name2"
                            }
                          

                            output += '<td section="Attachment Name"   class="attachment_file_name_td" onmousemove="customWordWrap();" onclick ="redirectWithNewWindow(\'' +element.dropboxName + '\')"><div class="attachment_truncate"><span class ="'+class_name+'">'+file_name+'</span><span class="attachment_file_extension">.'+extenssion+'</span></div></td>'; 
                            // output += '<td section="Attachment Name" style="max-width: 75% " class="word-break_code" onclick ="redirectWithNewWindow(\'' +element.dropboxName + '\')"> <div class="filName-container">'+ fileName +'</div><div class="filext-container">.'+extention+'</div></td>'       
                        }
                        if(single == " ")
                        {
                            output +='<td section="" style="width:40px !important;" class="text-right"><button onclick = "removeAttachment('+element.documentId+')" class="custom-btn-remove">Remove</td>';       
                        }

                    });

                    output += '</tr>';
                    counter = counter + 1;
                    
                    // <a target="_blank" href="https://www.dropbox.com/sh/lv3cdup8h7pbgxe/AACASU18W2KdP_735jSOzKbTa/reak?dl=0&preview=' +element.dropboxName + '&subfolder_nav_tracking=1" title="' +element.path_display + '">Dropbox link</a>
                });

                destroyAttachmentTable();
                $("#v-4-thead").html(head);
                $('#v-4-body').html(output);
                documentsTableRefresh();
                attachmentSortingElementChanged();
                customWordWrap();
            }

        }
    });
}

function destroyAttachmentTable() {
    if ($.fn.DataTable.isDataTable('#v-4')) {
            $('#v-4').DataTable().destroy();
    }
    
    $("#v-4-thead").html("");
    $("#v-4-body").html("");
} 

fetchDocumentsRecords();
function redirectWithNewWindow(Url){
    var dropboxPublicViewKey= $('#dropboxPublicViewKey').val();
    Url = dropboxPublicViewKey+'&preview='+Url+'&subfolder_nav_tracking=1';
    window.open(Url, '_blank');

}
var tableDoc = "";

function documentsTableRefresh() {
    var docColumnOrder = localStorage.getItem('AttachmentsColumns');
		var docColumnOrderSet =  [];
		if(docColumnOrder != null ){
            docColumnOrder = JSON.parse(docColumnOrder);
            docColumnOrder.forEach(element => {
                docColumnOrderSet.push(null);
            });	
			let dateIndex = docColumnOrder.indexOf("Date Added");
            docColumnOrderSet[dateIndex] = {"sType": "date-uk"}
            
		}else{
		    docColumnOrderSet =  [{ "sType": "date-uk" }, null, null];
				
		}
table = $("#v-4").on("draw.dt", function () {
            $(this).find(".dataTables_empty").parents('tbody').empty();
        }).DataTable({
            // "order": [[1, "asc"]],
            "stateSave": true,
            "searching": false,
            colReorder : true,
            "bPaginate": true,
            "bLengthChange": false,
            "bFilter": true,
            "bInfo": true,
            "bAutoWidth": false,
            "autoWidth": true,
            "scrollY": "200px",
            "scrollCollapse": true,
            "bDestroy": true,
            "aoColumns":docColumnOrderSet,
            "autoWidth": true,
            "scrollY": "200px",
            "scrollCollapse": false,
            // "orderFixed": {
            //  "post": [[ 1, 'asc' ]],
            // },
            // columnDefs: [{
            //  targets: [ 0 ],
            //  orderData: [ 0, 1 ]
   //       }],
            iDisplayLength: 25,
            pagingType: "full",
            dom: "<'row1'<'customPipelineWidth' RZlf<'table-responsive1'tr>>>" + "<'#datatable_attachment_showPage.hidden' p><'#v-4-custom-page-info.datatablecustom-footer-text'>",
            language: {
                "info": "",
                "zeroRecords": "",
                "infoEmpty": "",
                paginate: {
                    first: '<span id="ov4btn1"></span>', 
                    previous: '<span id="ov4btn2"></span>',
                    next: '<span id="ov4btn3"></span>', 
                    last: '<span id="ov4btn4"></span>',
                },
            },

            drawCallback:function(){
                var $api = this.api();
                var pages = $api.page.info();
              
                var textPage = (pages.page +1) +' of '+ pages.pages ;
                var disableleft='';
                var disableright='';
                if(pages.page == 0){ 
                    disableleft = 'disable';
			if((pages.page+1) === pages.pages){
			    disableright = 'disable';
			}
                }else{  
		    if((pages.page+1) === pages.pages){
			disableright = 'disable';
		    }
		}
                // }
                var textInfo = 'Showing '+(pages.start +1)+'-'+pages.end+' of '+pages.recordsTotal+' entries';
                $('#v-4-custom-page-info').html('<div class=""><div class="text-right pull-right data-table-footer"> <span id="v4btn1"  class="'+disableleft+'"  onclick="v4btn1()"><i class="fa fa-angle-double-left"></i></span> <span id="v4btn2" class="'+disableleft+'"  onclick="v4btn2()"><i class="fa fa-angle-left"></i></span> '+textPage+' <span id="v4btn3" class="'+disableright+'"  onclick="v4btn3()"><i class="fa fa-angle-right"></i></span> <span id="v4btn4" onclick="v4btn4()" class="'+disableright+'" ><i class="fa fa-angle-double-right"></i></span> </div><div class="text-left" >'+textInfo+'</div> </div>');
                if(pages.pages <= 1){
                    // With this current length setting, not more than 1 page, hide pagination
                    $('#v-4-custom-page-info .data-table-footer').css('display','none');
                }
                journal_width();
                replaceOnFirst('v-4-body');
            }
        });	

        let sortSetting = localStorage.getItem("v-4-LastSort"+window.location.pathname);
        if(sortSetting != null){
            sortSetting = JSON.parse(sortSetting);
            let colIndex = docColumnOrder.indexOf(sortSetting[0]);
            table.order([colIndex, sortSetting[1]]);
            table.draw();
        }
               
}



 //attachment sorting element changed
function attachmentSortingElementChanged()
{
     $(document).ready( function () {
      var table = $('#v-4').DataTable();
      
      //Turning Off ALL event listeners for the Name Table Cell
      $(".targetHeaderCell").off();
      
      //Adding cursor class to testSpan and Removing Cursor class from overall header
      $(".targetHeaderCell").css("cursor","default");
      var booleanSortCol1 = false;
      $("#clickSpanAttachment_0").css("cursor","pointer");
      var booleanSortCol2 = false;
      $("#clickSpanAttachment_1").css("cursor","pointer");
      
      $("#clickSpanAttachment_0").on("click",function(){
        if (booleanSortCol1 == false)
        {
            table.order([0, 'desc']).draw();
            booleanSortCol1 = true;
            localStorage.setItem('v-4-LastSort'+window.location.pathname,JSON.stringify([$(this).html(),'desc']));
        }
        else
        {
            table.order([0, 'asc']).draw();
            booleanSortCol1 = false;
            localStorage.setItem('v-4-LastSort'+window.location.pathname,JSON.stringify([$(this).html(),'asc']));
        }
        
      });

      $("#clickSpanAttachment_1").on("click",function(){
        if (booleanSortCol2 == false)
        {
            table.order([1, 'desc']).draw();
            booleanSortCol2 = true;
            localStorage.setItem('v-4-LastSort'+window.location.pathname,JSON.stringify([$(this).html(),'desc']));
        }
        else
        {
            table.order([1, 'asc']).draw();
            booleanSortCol2 = false;
            localStorage.setItem('v-4-LastSort'+window.location.pathname,JSON.stringify([$(this).html(),'asc']));
        }
        
      });
      
      
    } );
}
attachmentSortingElementChanged();


function makeRandomName(length) {
    var result           = '';
    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    var charactersLength = characters.length;
    for ( var i = 0; i < 10; i++ ) {
       result += characters.charAt(Math.floor(Math.random() * charactersLength));
    }
    return result;
 }

function fileUploadOnDropbox(file,stor) {

    var xhr = new XMLHttpRequest();
    xhr.upload.onprogress = function (evt) {
        // var percentComplete = parseInt(100.0 * evt.loaded / evt.total);
        var fileUploadCountyMax = Number($('#fileUploadCountyMax').val());
       
        var  percentComplete = 100 / parseInt(fileUploadCountyMax);
        var xx = percentComplete + stor;

       
        $('#progressBarFiles').css("width", xx+'%');

         storeVlaue = xx;

        

    };

    xhr.onload = function () {
        if (xhr.status === 200) {
            var fileInfo = JSON.parse(xhr.response);
            // Promise end
           
            incFileUploadingProgress('upload');
            return fileDetailsSave(file,fileInfo,stor)
        } else {
            incFileUploadingProgress('not');
            var errorMessage = xhr.response || 'Unable to upload file';
            // Upload failed. Do something here with the error.
        }
    };
    var dropboxAPI = $('#dropboxApiKey').val();
    // 'tga7dbRPrVAAAAAAAAABgjzKt46ZsTgwCdEpQyz5mrZjIzBMwGbkYCr4SfVZzQFR'
    // xhr.open('POST', '<a class="vglnk" href="https://content.dropboxapi.com/2/files/upload" rel="nofollow"><span>https</span><span>://</span><span>content</span><span>.</span><span>dropboxapi</span><span>.</span><span>com</span><span>/</span><span>2</span><span>/</span><span>files</span><span>/</span><span>upload</span></a>');
    xhr.open('POST', 'https://content.dropboxapi.com/2/files/upload');
    xhr.setRequestHeader('Authorization', 'Bearer '+dropboxAPI);
    xhr.setRequestHeader('Content-Type', 'application/octet-stream');
    xhr.setRequestHeader('Dropbox-API-Arg', JSON.stringify({
        path: '/' +makeRandomName()+file.name,
        mode: 'add',
        autorename: true,
        mute: false
    }));
    xhr.send(file);
}

function jsConvertToDate(dateTZ) {
    var a1 = new Date(dateTZ);
    return (("0" + a1.getDate()).slice(-2) +"/" + ("0" + (a1.getMonth() + 1)).slice(-2) + "/" + a1.getFullYear());
}

// function randomFileName() {
//     var renDate = new Date().getTime();
//     renDate = renDate + 'F' + Math.round(Math.random() * 1000);
//    
// }
function incFileUploadingProgress(notupload){
  
    var fileUploadCountyMax = Number($('#fileUploadCountyMax').val());
    var fileUploadCounty = Number($('#fileUploadCounty').val());
    fileUploadCounty = Number(fileUploadCounty);
    $('#fileUploadCounty').val(fileUploadCounty+1);
    if(Number(fileUploadCountyMax) >= fileUploadCounty){
        $('#progressBarFiles').html(fileUploadCounty+ ' of ' +fileUploadCountyMax);
        // $('#progressBarFiles').css("width", '1%');
    }
    if(notupload === 'not'){
        var notUpload = $('#fileUploadCountyNot').val();
        notUpload = Number(notUpload) +1;
        $('#fileUploadCountyNot').val(notUpload);
    }
}
// function checkFileUploadingProgress(){
//     var fileUploadCountyMax = Number($('#fileUploadCountyMax').val());
//     var fileUploadCounty = Number($('#fileUploadCounty').val());
//     var notUpload = $('#fileUploadCountyNot').val();
//     if(Number(fileUploadCountyMax) < fileUploadCounty){
//    
//         $('#progressBarFiles').html('Complete...');
//         setTimeout(() => {
//             $('#myModal_attach').modal('hide');
//             // notifyr((fileUploadCounty-1)+ ' Files uploaded successfully.  '+(notUpload)+ ' not uploaded','success');
//             tableDoc = $('#v-4').DataTable();
//             tableDoc.destroy();
//             fetchDocumentsRecords();            
//         }, 10);

//     }
// }
function fileDetailsSave(file,fileInfo,inc){
    var clientId = $('#dbid').val();
    $.ajax({
        url: 'documents/fileUpload',
        type: 'POST',
        data: {
            client_id: clientId,
            originalName: file.name,
            dropboxName:fileInfo.name,
            path_lower:fileInfo.path_lower,
            path_display:fileInfo.path_display,
            fileType:file.type,
            dateAdded:jsConvertToDate(fileInfo.server_modified),
        },
        success: function (response) {
            var resp = JSON.parse(response);
            var message = (resp.status == 'success') ? ['File Uploaded Successfully...', 'success'] : ['File couldn\'t be uploaded\, Please try again later!', 'warning'];
           
            return inc;
        }
    });
}
function removeAttachment(attachmentId){
    swal({
            title: "",
            text: "You are about to remove this attachment.\n This will not remove the attachment from Dropbox.\n Are you sure?",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-default c-button-padding",
            cancelButtonClass: 'c-button-padding',
            confirmButtonText: "Yes",
            cancelButtonText: "Cancel",
            closeOnConfirm: true,
            // closeOnCancel: false,
            allowOutsideClick: true,
        },
        function (isConfirm) {
            if (isConfirm) {
                $.ajax({
                    type: "POST",
                    url: "documents/deleteAttachment",
                    data: {
                        attachmentId: attachmentId,
                    },
                    success: function (response) {
                     
                       var respo_output = JSON.parse(response);
                        if (respo_output.status == "success") {
                            reakTracker('Documents Updated');
                            tableDoc = $('#v-4').DataTable();
                            tableDoc.destroy();
                            fetchDocumentsRecords();
                            // notifyr('Attachment has been deleted successfully !', 'success');
                            journal_width();
                        } else {
                            notifyr('Attachment couldn\'t be delete, Please try again !', 'warning');
                        }
                        
                    }
                });
            }
        });
}

/**Four time use use code in diff pages so we paste here*/
function customWordWrap()
{
	var td_array = document.getElementsByClassName("attachment_file_name_td");
	var header_array = document.getElementsByClassName("attachment_file_name_header");
	if(td_array.length != 0)
	{
		for(var i = 0; i <= header_array.length-1; i++)
		{
			var header_text = header_array[i].children[0].innerHTML;
		
			if(header_text == "Attachment Name")
			{
				var required_header = header_array[i];
				var header_width = required_header.style.width;
				var prepareing_element_width = parseInt(header_width)-60;
				for(var j = 0; j <= td_array.length-1; j++)
				{
					td_array[j].children[0].setAttribute("style","width:"+prepareing_element_width+"px");
				}
			}
		}
	}
}